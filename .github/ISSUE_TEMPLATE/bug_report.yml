name: Bug Report
description: File a bug report.
labels: ['bug', 'triage']
#projects: ['octo-org/1', 'octo-org/44']
body:
  - type: markdown
    attributes:
      value: |
        Thank you for taking the time to fill out this bug report!

        Please check the following first:

        * The bug must be present in the core webview library and not caused by faults in language bindings.
        * The bug may have been fixed alreadyâ€”please test the latest unreleased code (`master`/`main` branch).
  - type: textarea
    id: description
    attributes:
      label: Description
      description: Describe the bug in a clear and concise manner.
    validations:
      required: true
  - type: textarea
    id: expected-behavior
    attributes:
      label: Expected behavior
      description: Describe what you expected to happen.
    validations:
      required: true
  - type: textarea
    id: actual-behavior
    attributes:
      label: Actual behavior
      description: Describe what happened instead of the above.
    validations:
      required: true
  - type: textarea
    id: reproduction
    attributes:
      label: How can we reproduce the bug?
      description: Describe the steps to reproduce the bug.
      placeholder: |
        1. First step.
        2. Second step.
        3. ...
    validations:
      required: true
  - type: textarea
    id: code-sample
    attributes:
      label: Code sample
      description: If you have a short code sample (C/C++) for reproducing the bug then please provide it.
      render: cpp
    validations:
      required: false
  - type: input
    id: code-sample-url
    attributes:
      label: External code sample
      description: If you have an external code sample (C/C++) for reproducing the bug then please provide the URL.
    validations:
      required: false
  - type: textarea
    id: compiler
    attributes:
      label: 'C/C++ compiler'
      description: |
        Paste the output of the following commands.

        Unix-like environments:
        ```sh
        for c in gcc clang; do echo "$c: $($c -dumpfullversion 2>/dev/null || echo N/A)"; done
        ```

        Windows:
        ```ps
        ("gcc", "clang") | %{ "$($_): $(if (Get-Command $_ -CommandType Application -ErrorAction SilentlyContinue) { &$_ -dumpfullversion } else { "N/A" })" }
        ```
      render: code
    validations:
      required: true
  - type: input
    id: system
    attributes:
      label: 'System information'
      description: |
        Paste the output of the following commands depending on your system.

        Linux:
        ```sh
        echo "$((lsb_release -sd 2>/dev/null || echo Unknown) | tr -d '\n') ($(uname -m))"
        ```

        macOS:
        ```sh
        uname -srvmo
        ```

        Windows (PowerShell):
        ```ps
        $os = Get-CimInstance Win32_OperatingSystem; if (-not ($a = $env:PROCESSOR_ARCHITEW6432)) { $a = $env:PROCESSOR_ARCHITECTURE }; "$($os.Caption) $($os.Version) ($a)"
        ```
    validations:
      required: true

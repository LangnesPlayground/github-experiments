name: Bug Report
description: File a bug report.
labels: ['bug', 'triage']
#projects: ['octo-org/1', 'octo-org/44']
body:
  - type: markdown
    attributes:
      value: |
        Thank you for taking the time to fill out this bug report!

        Please check the following first:

        * The bug must be present in the core webview library and not caused by faults in language bindings.
        * The bug may have been fixed alreadyâ€”please test the latest unreleased code (`master`/`main` branch).
  - type: textarea
    id: description
    attributes:
      label: Description
      description: Describe the bug in a clear and concise manner.
    validations:
      required: true
  - type: textarea
    id: expected-behavior
    attributes:
      label: Expected behavior
      description: Describe what you expected to happen.
    validations:
      required: true
  - type: textarea
    id: actual-behavior
    attributes:
      label: Actual behavior
      description: Describe what happened instead of the above.
    validations:
      required: true
  - type: textarea
    id: reproduction
    attributes:
      label: How can we reproduce the bug?
      description: Describe the steps to reproduce the bug.
      placeholder: |
        1. First step.
        2. Second step.
        3. ...
    validations:
      required: true
  - type: textarea
    id: code-sample
    attributes:
      label: Code sample
      description: If you have a short code sample (C/C++) for reproducing the bug then please provide it.
      render: cpp
    validations:
      required: false
  - type: input
    id: code-sample-url
    attributes:
      label: External code sample
      description: If you have an external code sample (C/C++) for reproducing the bug then please provide the URL.
    validations:
      required: false
  - type: textarea
    id: environment
    attributes:
      label: Environment
      description: |
        Describe your system's environment such as the operating system and C/C++ compiler.
        Feel free to use the commands below for your convenience to extract information.

        Linux and other Unix-like environments except macOS:
        ```sh
        echo "OS: $((lsb_release -sd 2>/dev/null || echo Unknown) | tr -d '\n') ($(uname -m))"
        echo "GCC: $(gcc -dumpfullversion 2>/dev/null || echo N/A)"
        echo "Clang: $(clang -dumpversion 2>/dev/null || echo N/A)"
        ```

        macOS:
        ```sh
        echo "OS: $(sw_vers -productName) $(sw_vers -productVersion) ($(uname -m))"
        echo "Clang: $(clang -dumpversion 2>/dev/null || echo N/A)"
        ```

        Windows (PowerShell):
        ```ps
        "OS: $($os = Get-CimInstance Win32_OperatingSystem; if (-not ($a = $env:PROCESSOR_ARCHITEW6432)) { $a = $env:PROCESSOR_ARCHITECTURE }; "$($os.Caption) $($os.Version) ($a)")"
        "GCC: $(if (Get-Command gcc -CommandType Application -ErrorAction SilentlyContinue) { &gcc -dumpfullversion } else { "N/A" })"
        "Clang: $(if (Get-Command clang -CommandType Application -ErrorAction SilentlyContinue) { &clang -dumpfullversion } else { "N/A" })"
        ```
      placeholder: |
        OS: [Ubuntu 22.04.3 LTS (x86_64)]
        GCC: 12.3.0
        Clang: 14.0.0
    validations:
      required: true
